{"version":3,"sources":["App.tsx","reportWebVitals.ts","index.tsx"],"names":["webtoon_data","today_weeknum","Date","getDay","filtering_data","Array","url","callback","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","console","log","responseText","data","JSON","parse","err","message","open","send","ajax_get","filter","element","weekday","App","useState","search_txt","change_search_txt","target_data","change_target_data","Webtoon_area","a_webtoon","map","href","className","style","fontSize","listStyle","textAlign","color","service","marginLeft","state","title","artist","src","img","Filter_option","props","onClick","num","filter_num","type","value","onChange","e","input_txt","target","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.5f3a955c.chunk.js","sourcesContent":["import React, { useState } from 'react';\nimport './App.css';\nconst webtoon_api_url = \"https://toy-projects-api.herokuapp.com/webtoon/all\";\nvar webtoon_data:any;\nvar today_weeknum = new Date().getDay();\nvar filtering_data = new Array();\n\ninterface A_webtoon_info {\n  title: string;\n  artist: string;\n  url: string;\n  img: string;\n  service: string;\n  state: string;\n  weekday: number;\n}\n\n\nfunction App() {\n//검색 기능\nconst [search_txt, change_search_txt] = useState(\"\");\nconst set_search_txt = (e:any) => {\n  change_search_txt(e.target.value);\n  if (e.target.value == \"\") {\n    change_target_data(filtering_data);\n  } else {\n    change_target_data(search_data(e.target.value));\n  }\n};\nlet [target_data, change_target_data] = useState(filtering_data);\nconst Webtoon_area = () => {\n  const a_webtoon = target_data.map((target_data) => (\n    <a href={target_data.url}>\n      <li className=\"webtoon_container\">\n        <div className=\"webtoon_info\">\n          <ul className=\"webtoon_info_container\">\n            <li\n              style={{\n                fontSize: \"10px\",\n                listStyle: \"none\",\n                textAlign: \"right\",\n                color: \"white\",\n              }}\n            >\n              <span>{target_data.service}</span>\n              <span style={{ marginLeft: \"2px\" }}>{target_data.state}</span>\n            </li>\n            <li style={{ fontSize: \"10px\", listStyle: \"none\" }}>\n              {target_data.title}\n            </li>\n            <li style={{ fontSize: \"8px\", listStyle: \"none\" }}>\n              {target_data.artist}\n            </li>\n          </ul>\n        </div>\n        <div className=\"thumnail\">\n          <img src={target_data.img} className=\"thumnail_img\" />\n        </div>\n      </li>\n    </a>\n  ));\n  return <ul className=\"content_area\">{a_webtoon}</ul>;\n};\nfunction Filter_option(props:any) {\n  return (\n    <li\n      onClick={() => {\n        change_target_data(filter_data(props.filter_num));\n      }}\n      className=\"filter_option\"\n    >\n      <a href=\"#\">{props.weekday}</a>\n    </li>\n  );\n}\n\n\nreturn (\n  <div className=\"body\">\n    <div className=\"top_bar\">\n      <input\n        type={\"text\"}\n        value={search_txt}\n        className=\"top_bar_search_box\"\n        onChange={set_search_txt}\n      />\n      <span className=\"top_bar_item\">/ SEARCH</span>\n    </div>\n    <ul className=\"filter_container\">\n      <Filter_option filter_num=\"1\" weekday=\"월\" />\n      <Filter_option filter_num=\"2\" weekday=\"화\" />\n      <Filter_option filter_num=\"3\" weekday=\"수\" />\n      <Filter_option filter_num=\"4\" weekday=\"목\" />\n      <Filter_option filter_num=\"5\" weekday=\"금\" />\n      <Filter_option filter_num=\"6\" weekday=\"토\" />\n      <Filter_option filter_num=\"0\" weekday=\"일\" />\n      <Filter_option filter_num=\"7\" weekday=\"완결\" />\n    </ul>\n    <Webtoon_area />\n  </div>\n);\n}\nfunction filter_data(num:number) {\n  var change_target_data = webtoon_data.filter(function (element:A_webtoon_info) {\n    return element.weekday == num;\n  });\n  return change_target_data;\n}\n\nfunction search_data(input_txt:string) {\n  var change_target_data = webtoon_data.filter(function (element:A_webtoon_info) {\n    return (\n      element.title.includes(input_txt) || element.artist.includes(input_txt)\n    );\n  });\n  return change_target_data;\n}\n\nfunction ajax_get(url:string, callback:any) {\n  var xmlhttp = new XMLHttpRequest();\n  xmlhttp.onreadystatechange = function () {\n    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\n      console.log(\"responseText:\" + xmlhttp.responseText);\n      try {\n        var data = JSON.parse(xmlhttp.responseText);\n      } catch (err) {\n        console.log(err.message + \" in \" + xmlhttp.responseText);\n        return;\n      }\n      callback(data);\n    }\n  };\n  xmlhttp.open(\"GET\", url, false); //true는 비동기식, false는 동기식 true로 할시 변수 변경전에 웹페이지가 떠버림\n  xmlhttp.send();\n}\najax_get(webtoon_api_url, function (data:any) {\n  webtoon_data = data;\n  filtering_data = webtoon_data.filter(function (element:A_webtoon_info) {\n        return element.weekday == today_weeknum;\n  });\n});\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}