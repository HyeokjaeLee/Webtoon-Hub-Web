{"version":3,"sources":["components/webtoon_container.tsx","components/kakao_login.jsx","App.tsx","modules/base_modules.ts","reportWebVitals.ts","index.tsx"],"names":["View_a_webtoon","service_and_state","this","props","state","service","href","url","className","style","fontSize","listStyle","textAlign","title","artist","src","img","React","Component","Login","onLoginKakao","jsKey","onSuccess","result","onFailure","console","log","render","onClick","getProfile","today_weeknum","Date","getDay","page_array_num","webtoon_data","json_data","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","err","message","open","send","get_json_data","filtering_data","filter","element","weekday","App","document","querySelector","innerText","total_page_num","useState","target_data","change_target_data","a_webtoon","map","index","rest_webtoon_count","page_array","total_webtoon_count","length","i","page_item_start_num","page_item_end_num","view_start_num","change_view_start_num","view_end_num","change_view_end_num","search_txt","change_search_txt","fully_loading","change_fully_loading","page_index_maker","first_page_array_num","change_view_index","num","page_index","part_of_change_page_index","change_page_index","View_more_webtoon","prop","move","txt","Webtoon_area","viewing_webtoon","slice","View_page_index","view_page_index","push","window","scrollTo","Webtoon_filter","options","Filter_option","id","filter_num","type","value","onChange","e","input_txt","target","includes","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.ed73203e.chunk.js","sourcesContent":["import React from \"react\";\r\nimport type { A_webtoon_info } from \"../modules/base_modules\";\r\nimport { Fade } from \"../modules/animation\";\r\n\r\nclass View_a_webtoon extends React.Component<A_webtoon_info> {\r\n  render() {\r\n    let service_and_state: string;\r\n    if (this.props.state != \"\") {\r\n      service_and_state = this.props.service + \" / \" + this.props.state;\r\n    } else {\r\n      service_and_state = this.props.service;\r\n    }\r\n    return (\r\n      <Fade>\r\n        <a href={this.props.url}>\r\n          <li className=\"webtoon_container\">\r\n            <div className=\"webtoon_info\">\r\n              <ul className=\"webtoon_info_container\">\r\n                <li\r\n                  style={{\r\n                    fontSize: \"10px\",\r\n                    listStyle: \"none\",\r\n                    textAlign: \"right\",\r\n                  }}\r\n                >\r\n                  {service_and_state}\r\n                </li>\r\n                <li style={{ fontSize: \"10px\", listStyle: \"none\" }}>{this.props.title}</li>\r\n                <li style={{ fontSize: \"8px\", listStyle: \"none\" }}>{this.props.artist}</li>\r\n              </ul>\r\n            </div>\r\n            <div className=\"thumnail\">\r\n              <img src={this.props.img} className=\"thumnail_img\" />\r\n            </div>\r\n          </li>\r\n        </a>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\n\r\nexport default View_a_webtoon;\r\n","import KakaoLogin from 'react-kakao-login';\r\n\r\nconst Login = (props) => {\r\n  const { onLoginKakao } = props;\r\n  return (\r\n    <div>\r\n      <KakaoLogin\r\n        jsKey='71c837a33c49953187126f404e118511'\r\n        onSuccess={result => onLoginKakao(result)}\r\n        onFailure={result => console.log(result)}\r\n        render={(props) => (\r\n          <div onClick={props.onClick}>login test</div>\r\n        )}\r\n        getProfile={true}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;","import View_a_webtoon from \"./components/webtoon_container\";\nimport Login from \"./components/kakao_login.jsx\";\nimport React, { useState } from \"react\";\nimport type { A_webtoon_info, Page_index } from \"./modules/base_modules\";\nimport { get_json_data } from \"./modules/base_modules\";\nimport \"./App.css\";\nconst webtoon_api_url = \"https://toy-projects-api.herokuapp.com/webtoon/all\";\nvar today_weeknum = new Date().getDay();\nlet page_array_num: number = 1;\n\n/*const useTitle = (initialTitle: any) => {\n  const [title, setTitle] = useState(initialTitle);\n  const updateTitle = () => {\n    const htmlTitle: any = document.querySelector(\"title\");\n    htmlTitle.innerText = title;\n  };\n  useEffect(updateTitle, [title]);\n  return setTitle;\n};\n const titleUpdater = useTitle(\"Loading...\");\nsetTimeout(() => titleUpdater(\"Home\"), 1000);*/\n\nlet webtoon_data: A_webtoon_info[] = get_json_data(webtoon_api_url);\nlet filtering_data: A_webtoon_info[] = webtoon_data.filter(function (element: A_webtoon_info) {\n  return element.weekday == today_weeknum;\n});\n\nfunction App() {\n  const htmlTitle: any = document.querySelector(\"title\");\n  htmlTitle.innerText = \"WEBTOON HUB\";\n  const [target_data, change_target_data] = useState(filtering_data);\n  const a_webtoon: JSX.Element[] = target_data.map((target_data, index: number) => (\n    <View_a_webtoon\n      key={index}\n      title={target_data.title}\n      url={target_data.url}\n      img={target_data.img}\n      artist={target_data.artist}\n      service={target_data.service}\n      state={target_data.state}\n      weekday={target_data.weekday}\n    ></View_a_webtoon>\n  ));\n\n  let total_page_num: number;\n  let rest_webtoon_count: number = 0;\n  let page_array: Page_index[] = [];\n  let total_webtoon_count: number = a_webtoon.length;\n  if (total_webtoon_count % 9 == 0) {\n    total_page_num = total_webtoon_count / 9;\n  } else {\n    total_page_num = (total_webtoon_count - (total_webtoon_count % 9)) / 9 + 1;\n    rest_webtoon_count = total_webtoon_count % 9;\n  }\n  for (let i: number = 1; i <= total_page_num; i++) {\n    if (i < total_page_num) {\n      page_array[i] = {\n        page_item_start_num: (i - 1) * 9,\n        page_item_end_num: (i - 1) * 9 + 9,\n      };\n    } else {\n      page_array[i] = {\n        page_item_start_num: (i - 1) * 9,\n        page_item_end_num: (i - 1) * 9 + rest_webtoon_count,\n      };\n    }\n  }\n\n  const [view_start_num, change_view_start_num] = useState(0);\n  const [view_end_num, change_view_end_num] = useState(9);\n\n  //검색 기능\n  const [search_txt, change_search_txt] = useState(\"\");\n  const [fully_loading, change_fully_loading] = useState(false);\n  const set_search_txt = (e: any) => {\n    change_search_txt(e.target.value);\n    if (e.target.value == \"\") {\n      change_fully_loading(false);\n      change_target_data(filtering_data);\n    } else {\n      change_fully_loading(true);\n      change_target_data(search_data(e.target.value));\n    }\n  };\n\n  //페이지 인덱스\n  const page_index_maker = (first_page_array_num: number) => {\n    let index: number[] = [];\n    for (let i = 0; i < 6; i++) {\n      index[i] = first_page_array_num + i;\n    }\n    return index;\n  };\n\n  //하단 페이지 : 이동\n\n  const change_view_index = (num: number): void => {\n    change_view_start_num(page_array[num].page_item_start_num);\n    change_view_end_num(page_array[num].page_item_end_num);\n  };\n  //하단 페이지 : 보여지는 숫자값 변경&이동\n  const [page_index, part_of_change_page_index] = useState(page_index_maker(page_array_num));\n  const change_page_index = (num: number): void => {\n    part_of_change_page_index(page_index_maker(num));\n    change_view_index(num);\n  };\n\n  //하단 페이지 : 한번에 크게 이동\n  const View_more_webtoon = (prop: any) => {\n    return (\n      <a\n        className=\"view_select_item\"\n        onClick={() => {\n          switch (prop.move) {\n            case \">\":\n              if (page_array_num + 10 < total_page_num) {\n                page_array_num = page_array_num + 5;\n                change_page_index(page_array_num);\n              } else if (page_array_num + 5 < total_page_num) {\n                page_array_num = total_page_num - 5;\n                change_page_index(page_array_num);\n              }\n              break;\n            case \"<\":\n              if (page_array_num - 5 > 1) {\n                page_array_num = page_array_num - 5;\n                change_page_index(page_array_num);\n              } else if (page_array_num != 1) {\n                page_array_num = 1;\n                change_page_index(page_array_num);\n              }\n              break;\n          }\n        }}\n      >\n        {prop.txt}\n      </a>\n    );\n  };\n  const Webtoon_area = () => {\n    let viewing_webtoon: JSX.Element[] = a_webtoon.slice(view_start_num, view_end_num);\n    if (fully_loading) {\n      viewing_webtoon = a_webtoon;\n    } else {\n      viewing_webtoon = a_webtoon.slice(view_start_num, view_end_num);\n    }\n    return <ul className=\"content_area\">{viewing_webtoon}</ul>;\n  };\n\n  const View_page_index = () => {\n    let view_page_index: JSX.Element[] = [];\n    for (let i = 0; i < 6; i++) {\n      view_page_index.push(\n        <a\n          className=\"view_select_item\"\n          onClick={() => {\n            change_view_index(page_index[i]);\n            window.scrollTo(0, 0);\n          }}\n        >\n          {page_index[i]}\n        </a>,\n      );\n    }\n    if (fully_loading != true) {\n      return (\n        <span className=\"view_select\">\n          <View_more_webtoon move=\"<\" txt=\"<\" />\n          {view_page_index}\n          <View_more_webtoon move=\">\" txt=\">\" />\n        </span>\n      );\n    } else {\n      return <span className=\"view_select\" />;\n    }\n  };\n\n  const Webtoon_filter = () => {\n    let options: JSX.Element[] = [];\n    const index: string[] = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"완결\"];\n    const Filter_option = (prop: any) => {\n      return (\n        <li className=\"filter_option\">\n          <a\n            id={prop.id}\n            onClick={() => {\n              change_search_txt(\"\");\n              change_fully_loading(false);\n              change_target_data(filter_data(prop.filter_num));\n              page_array_num = 1;\n              change_view_start_num(0);\n              change_view_end_num(9);\n              window.scrollTo(0, 0);\n            }}\n          >\n            {prop.weekday}\n          </a>\n        </li>\n      );\n    };\n    for (let i = 0; i < 8; i++) {\n      options[i] = <Filter_option filter_num={i} weekday={index[i]} id={\"option_\" + i} />;\n    }\n    return <ul className=\"filter_container\">{options}</ul>;\n  };\n  return (\n    <div className=\"body\">\n      <div className=\"top_bar\">\n        <input type={\"text\"} value={search_txt} className=\"top_bar_search_box\" onChange={set_search_txt} />\n        <span className=\"top_bar_item\">/SEARCH</span>\n      </div>\n      <Webtoon_filter />\n      <Webtoon_area />\n      <View_page_index />\n      <Login />\n    </div>\n  );\n}\n\nfunction filter_data(num: number) {\n  var change_target_data = webtoon_data.filter(function (element: A_webtoon_info) {\n    return element.weekday == num;\n  });\n  return change_target_data;\n}\n\nfunction search_data(input_txt: string) {\n  var change_target_data = webtoon_data.filter(function (element: A_webtoon_info) {\n    return element.title.includes(input_txt) || element.artist.includes(input_txt);\n  });\n  return change_target_data;\n}\n\nexport default App;\n","interface A_webtoon_info {\r\n  title: string;\r\n  artist: string;\r\n  url: string;\r\n  img: string;\r\n  service: string;\r\n  state: string;\r\n  weekday: number;\r\n}\r\n\r\ninterface Page_index {\r\n  page_item_start_num: number;\r\n  page_item_end_num: number;\r\n}\r\n\r\nconst get_json_data = (url: string) => {\r\n  let xmlhttp = new XMLHttpRequest();\r\n  let json_data: any;\r\n  xmlhttp.onreadystatechange = () => {\r\n    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n      try {\r\n        json_data = JSON.parse(xmlhttp.responseText);\r\n      } catch (err) {\r\n        console.log(err.message + \" in \" + xmlhttp.responseText);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n  xmlhttp.open(\"GET\", url, false); //true는 비동기식, false는 동기식 true로 할시 변수 변경전에 웹페이지가 떠버림\r\n  xmlhttp.send();\r\n  return json_data;\r\n};\r\n\r\nexport type { A_webtoon_info };\r\nexport type { Page_index };\r\nexport { get_json_data };\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}