{"version":3,"sources":["components/kakao_login.jsx","components/webtoon_container.tsx","App.tsx","modules/base_modules.ts","modules/classify_webtoon.ts","reportWebVitals.ts","index.tsx"],"names":["userid","View_a_webtoon","service_and_state","this","props","state","service","href","url","className","style","fontSize","listStyle","textAlign","title","artist","src","img","React","Component","KakaoSignUp","responseKaKao","res","setState","data","profile","id","setUserid","responseFail","err","onSuccess","getProfile","today_weeknum","Date","getDay","webtoon_data","json_data","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","console","log","message","open","send","get_json_data","classify_webtoon_data","view_webtoon_count","weekday_webtoon","week_num","filter","element","weekday","partition_webtoon","weekday_webtoon_data","partition_webtoon_data","weekday_webtoon_count","length","rest_webtoon_count","partition_count","i","push","slice","assemble_parts","week_index_array","page_index","week_index","customStyles","content","top","height","left","right","bottom","Modal","setAppElement","App","subtitle","useState","viewing_title","set_viewing_title","modalIsOpen","setIsOpen","closeModal","viewing_data","change_viewing_data","set_viewing_data","page_num","change_fully_loading","set_view_page_index","create_view_page_index","make_page_index_array","window","scrollTo","Userid","viewing_webtoons","map","index","convert_data_to_view","save_page","set_save_page","search_txt","change_search_txt","fully_loading","View_more_webtoon","prop","data_length","onClick","move","txt","result","Filter_option","index_array","start_num","view_count","view_page_index","Webtoon_filter","options","Webtoon_area","Page_index_area","placeholder","type","value","onChange","e","target","input_txt","includes","search_data","paddingLeft","isOpen","onAfterOpen","color","fontFamily","onRequestClose","contentLabel","float","ref","_subtitle","paddingTop","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.0c34f75f.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport KaKaoLogin from 'react-kakao-login';\r\n\r\nlet userid;\r\nclass KakaoSignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: 'kakao'\r\n        }\r\n    }\r\n    \r\n    responseKaKao = (res) => {\r\n        this.setState({\r\n            data: res\r\n        })\r\n        userid=this.state.data.profile.id\r\n        this.props.setUserid(userid)      \r\n    }\r\n\r\n    responseFail = (err) => {\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <>\r\n                    <KaKaoLogin\r\n                        onSuccess={this.responseKaKao}\r\n                        getProfile={true}\r\n                    />\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default KakaoSignUp;","import React from \"react\";\r\nimport type { A_webtoon_info } from \"../modules/base_modules\";\r\n\r\nclass View_a_webtoon extends React.Component<A_webtoon_info> {\r\n  render() {\r\n    let service_and_state: string;\r\n    if (this.props.state != \"\") {\r\n      service_and_state = this.props.service + \" / \" + this.props.state;\r\n    } else {\r\n      service_and_state = this.props.service;\r\n    }\r\n    return (\r\n      <a href={this.props.url}>\r\n        <li className=\"webtoon_container\">\r\n          <div className=\"webtoon_info\">\r\n            <ul className=\"webtoon_info_container\">\r\n              <li\r\n                style={{\r\n                  fontSize: \"10px\",\r\n                  listStyle: \"none\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {service_and_state}\r\n              </li>\r\n              <li style={{ fontSize: \"10px\", listStyle: \"none\" }}>{this.props.title}</li>\r\n              <li style={{ fontSize: \"8px\", listStyle: \"none\" }}>{this.props.artist}</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"thumnail\">\r\n            <img src={this.props.img} className=\"thumnail_img\" />\r\n          </div>\r\n        </li>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default View_a_webtoon;\r\n","import View_a_webtoon from \"./components/webtoon_container\";\r\nimport KakaoSignUp from \"./components/kakao_login.jsx\";\r\nimport React, { useState } from \"react\";\r\nimport type { A_webtoon_info } from \"./modules/base_modules\";\r\nimport { get_json_data } from \"./modules/base_modules\";\r\nimport { assemble_parts, search_data } from \"./modules/classify_webtoon\";\r\nimport Modal from \"react-modal\";\r\nimport \"./App.css\";\r\n//View Setting\r\nconst a_page_webtoon_view_count = 12; //한페이지에 보여줄 웹툰 갯수\r\nconst a_page_index_view_count = 5; //한페이지에 보여줄 페이지 구분 갯수\r\nconst webtoon_api_url = \"https://toy-projects-api.herokuapp.com/webtoon/info\";\r\nconst today_weeknum = new Date().getDay();\r\nconst webtoon_data: A_webtoon_info[] = get_json_data(webtoon_api_url);\r\nconst classify_webtoon_data = assemble_parts(webtoon_data, a_page_webtoon_view_count);\r\nconst week_index_array: string[] = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"완결\"];\r\nlet page_index = 0;\r\nlet week_index = today_weeknum;\r\n\r\nconst convert_data_to_view = (viewing_data: A_webtoon_info[]) => {\r\n  const result: JSX.Element[] = viewing_data.map((viewing_data, index: number) => (\r\n    <View_a_webtoon\r\n      key={index}\r\n      title={viewing_data.title}\r\n      url={viewing_data.url}\r\n      img={viewing_data.img}\r\n      artist={viewing_data.artist}\r\n      service={viewing_data.service}\r\n      state={viewing_data.state}\r\n      weekday={viewing_data.weekday}\r\n    />\r\n  ));\r\n  return result;\r\n};\r\n\r\nconst customStyles = {\r\n  content: {\r\n    top: \"0%\",\r\n    height: \"100%\",\r\n    left: \"auto\",\r\n    right: \"0%\",\r\n    bottom: \"auto\",\r\n  },\r\n};\r\nModal.setAppElement(\"#root\");\r\n\r\nfunction App() {\r\n  const [viewing_title, set_viewing_title] = useState(week_index_array[week_index] + \"요 웹툰\");\r\n  //modal\r\n  let subtitle: any;\r\n  const [modalIsOpen, setIsOpen] = React.useState(false);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n    if (Userid != \"Guest\") {\r\n      closeModal();\r\n    }\r\n  }\r\n\r\n  function afterOpenModal() {\r\n    // references are now sync'd and can be accessed.\r\n    subtitle.style.color = \"#101820\";\r\n    subtitle.style.fontFamily = \"main_font\";\r\n  }\r\n\r\n  function closeModal() {\r\n    setIsOpen(false);\r\n  }\r\n\r\n  //초기 값은 오늘날짜 웹툰\r\n  const [viewing_data, change_viewing_data] = useState<A_webtoon_info[]>(classify_webtoon_data[week_index][page_index]);\r\n\r\n  const set_viewing_data = (week_num: number, page_num: number): void => {\r\n    change_fully_loading(false);\r\n    week_index = week_num;\r\n    page_index = page_num;\r\n    if (week_index < 7) {\r\n      set_viewing_title(week_index_array[week_index] + \"요 웹툰\");\r\n    } else {\r\n      set_viewing_title(week_index_array[week_index] + \" 웹툰\");\r\n    }\r\n    change_viewing_data(classify_webtoon_data[week_index][page_index]);\r\n    set_view_page_index(create_view_page_index(make_page_index_array(classify_webtoon_data[week_index]), page_index, a_page_index_view_count));\r\n    window.scrollTo(0, 0);\r\n  };\r\n\r\n  const [Userid, setUserid] = useState(\"Guest\");\r\n  const viewing_webtoons = convert_data_to_view(viewing_data);\r\n\r\n  //검색전 보던 페이지 저장\r\n  const [save_page, set_save_page] = useState<A_webtoon_info[]>(viewing_data);\r\n\r\n  //검색 기능\r\n  const [search_txt, change_search_txt] = useState(\"\");\r\n  const [fully_loading, change_fully_loading] = useState(false);\r\n  const set_search_txt = (e: any) => {\r\n    change_search_txt(e.target.value);\r\n    if (e.target.value == \"\") {\r\n      change_fully_loading(false);\r\n      change_viewing_data(save_page);\r\n    } else {\r\n      change_fully_loading(true);\r\n      change_viewing_data(search_data(e.target.value, webtoon_data));\r\n    }\r\n  };\r\n\r\n  //하단 페이지 : 한번에 크게 이동\r\n  const View_more_webtoon = (prop: any) => {\r\n    let data_length: number = classify_webtoon_data[week_index].length;\r\n    return (\r\n      <li>\r\n        <a\r\n          className=\"view_select_item\"\r\n          onClick={() => {\r\n            switch (prop.move) {\r\n              case \">\":\r\n                if (page_index + a_page_index_view_count < data_length) {\r\n                  set_viewing_data(week_index, page_index + a_page_index_view_count);\r\n                }\r\n                break;\r\n              case \"<\":\r\n                if (page_index > a_page_index_view_count) {\r\n                  set_viewing_data(week_index, page_index - a_page_index_view_count);\r\n                } else if (page_index != 0) {\r\n                  page_index = 0;\r\n                  set_viewing_data(week_index, page_index);\r\n                }\r\n                break;\r\n            }\r\n          }}\r\n        >\r\n          {prop.txt}\r\n        </a>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const make_page_index_array = (viewing_data: A_webtoon_info[][]) => {\r\n    let result: number[] = [];\r\n    const data_length: number = viewing_data.length;\r\n    for (let i = 1; i <= data_length; i++) {\r\n      result.push(i);\r\n    }\r\n    return result;\r\n  };\r\n\r\n  const Filter_option = (prop: any) => {\r\n    return (\r\n      <li className=\"filter_option\">\r\n        <a\r\n          id={prop.id}\r\n          onClick={() => {\r\n            set_viewing_data(prop.week_num, prop.page_num);\r\n          }}\r\n        >\r\n          {prop.txt}\r\n        </a>\r\n      </li>\r\n    );\r\n  };\r\n\r\n  const create_view_page_index = (index_array: number[], start_num: number, view_count: number) => {\r\n    const result: JSX.Element[] = index_array\r\n      .map((data) => <Filter_option week_num={week_index} page_num={data - 1} txt={data} />)\r\n      .slice(start_num, start_num + view_count);\r\n    return result;\r\n  };\r\n\r\n  const [view_page_index, set_view_page_index] = useState(\r\n    create_view_page_index(make_page_index_array(classify_webtoon_data[week_index]), 0, a_page_index_view_count),\r\n  );\r\n\r\n  const Webtoon_filter = () => {\r\n    let options: JSX.Element[] = [];\r\n    for (let i = 0; i < 8; i++) {\r\n      options[i] = <Filter_option week_num={i} page_num={0} txt={week_index_array[i]} />;\r\n    }\r\n    return <ul className=\"filter_container\">{options}</ul>;\r\n  };\r\n  const Webtoon_area = () => {\r\n    if (fully_loading) {\r\n    }\r\n    return (\r\n      <div>\r\n        <ul className=\"content_area\">{viewing_webtoons}</ul>\r\n      </div>\r\n    );\r\n  };\r\n  const Page_index_area = () => {\r\n    if (fully_loading) {\r\n      return <></>;\r\n    } else {\r\n      return (\r\n        <>\r\n          <View_more_webtoon move=\"<\" txt=\"<\" />\r\n          {view_page_index}\r\n          <View_more_webtoon move=\">\" txt=\">\" />\r\n        </>\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className=\"body\">\r\n      <div className=\"top_bar\">\r\n        <span className=\"top_bar_item\">{viewing_title}</span>\r\n        <input\r\n          placeholder=\"SEARCH\"\r\n          type={\"text\"}\r\n          value={search_txt}\r\n          className=\"top_bar_search_box\"\r\n          onClick={() => {\r\n            set_save_page(viewing_data);\r\n          }}\r\n          onChange={set_search_txt}\r\n        />\r\n        <span className=\"top_bar_item\">\r\n          <li style={{ paddingLeft: \"20px\" }} onClick={openModal}>\r\n            MY\r\n          </li>\r\n          <Modal isOpen={modalIsOpen} onAfterOpen={afterOpenModal} onRequestClose={closeModal} style={customStyles} contentLabel=\"Example Modal\">\r\n            <a onClick={closeModal} style={{ float: \"right\" }}>\r\n              CLOSE\r\n            </a>\r\n            <br />\r\n            {Userid}\r\n            <h2 ref={(_subtitle) => (subtitle = _subtitle)}>WEBTOONHUB</h2>\r\n            <KakaoSignUp setUserid={setUserid} />\r\n          </Modal>\r\n        </span>\r\n      </div>\r\n      <Webtoon_filter />\r\n      <Webtoon_area />\r\n      <span className=\"view_select\" style={{ paddingTop: \"2.5%\" }}>\r\n        <Page_index_area />\r\n      </span>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","interface A_webtoon_info {\r\n  title: string;\r\n  artist: string;\r\n  url: string;\r\n  img: string;\r\n  service: string;\r\n  state: string;\r\n  weekday: number;\r\n}\r\n\r\nconst get_json_data = (url: string) => {\r\n  let xmlhttp = new XMLHttpRequest();\r\n  let json_data: any;\r\n  xmlhttp.onreadystatechange = () => {\r\n    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n      try {\r\n        json_data = JSON.parse(xmlhttp.responseText);\r\n      } catch (err) {\r\n        console.log(err.message + \" in \" + xmlhttp.responseText);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n  xmlhttp.open(\"GET\", url, false); //true는 비동기식, false는 동기식 true로 할시 변수 변경전에 웹페이지가 떠버림\r\n  xmlhttp.send();\r\n  return json_data;\r\n};\r\n\r\nexport type { A_webtoon_info };\r\nexport { get_json_data };\r\n","import type { A_webtoon_info } from \"./base_modules\";\r\n\r\nconst assemble_parts = (webtoon_data: A_webtoon_info[], view_webtoon_count: number) => {\r\n  //요일별로 분류\r\n  const weekday_webtoon = (week_num: number): A_webtoon_info[] => {\r\n    let weekday_webtoon_data = webtoon_data.filter(function (element: A_webtoon_info) {\r\n      return element.weekday == week_num;\r\n    });\r\n    return weekday_webtoon_data;\r\n  };\r\n  //한페이지에 보여줄 갯수로 묶음\r\n  const partition_webtoon = (weekday_webtoon_data: A_webtoon_info[], view_webtoon_count: number) => {\r\n    let partition_webtoon_data: A_webtoon_info[][] = [];\r\n    const weekday_webtoon_count: number = weekday_webtoon_data.length;\r\n    const rest_webtoon_count: number = weekday_webtoon_count % view_webtoon_count;\r\n    if (rest_webtoon_count == 0) {\r\n      const partition_count = weekday_webtoon_count / view_webtoon_count;\r\n      for (let i = 0; i < partition_count; i++) {\r\n        partition_webtoon_data.push(weekday_webtoon_data.slice(i * view_webtoon_count, i * view_webtoon_count + view_webtoon_count));\r\n      }\r\n    } else {\r\n      const partition_count = (weekday_webtoon_count - rest_webtoon_count) / view_webtoon_count;\r\n      for (let i = 0; i < partition_count; i++) {\r\n        partition_webtoon_data.push(weekday_webtoon_data.slice(i * view_webtoon_count, i * view_webtoon_count + view_webtoon_count));\r\n      }\r\n      partition_webtoon_data.push(weekday_webtoon_data.slice(weekday_webtoon_count - rest_webtoon_count - 1, weekday_webtoon_count - 1));\r\n    }\r\n    return partition_webtoon_data;\r\n  };\r\n\r\n  //분류했던 데이터 재조립\r\n  let classify_webtoon_data: A_webtoon_info[][][] = [];\r\n  for (let i = 0; i < 8; i++) {\r\n    classify_webtoon_data.push(partition_webtoon(weekday_webtoon(i), view_webtoon_count));\r\n  }\r\n  return classify_webtoon_data;\r\n};\r\n\r\nfunction search_data(input_txt: string, webtoon_data: A_webtoon_info[]) {\r\n  const change_target_data = webtoon_data.filter(function (element: A_webtoon_info) {\r\n    return element.title.includes(input_txt) || element.artist.includes(input_txt);\r\n  });\r\n  return change_target_data;\r\n}\r\n\r\nexport { assemble_parts, search_data };\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport reportWebVitals from \"./reportWebVitals\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\"),\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}