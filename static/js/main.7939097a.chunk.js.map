{"version":3,"sources":["components/kakao_login.jsx","components/webtoon_container.tsx","App.tsx","modules/base_modules.ts","modules/classify_webtoon.ts","reportWebVitals.ts","index.tsx"],"names":["userid","View_a_webtoon","service_and_state","this","props","state","service","href","url","className","style","fontSize","listStyle","textAlign","title","artist","src","img","React","Component","KakaoSignUp","responseKaKao","res","setState","data","profile","id","setUserid","responseFail","err","onSuccess","getProfile","today_weeknum","Date","getDay","webtoon_data","json_data","xmlhttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","console","log","message","open","send","get_json_data","classify_webtoon_data","view_webtoon_count","weekday_webtoon","week_num","filter","element","weekday","partition_webtoon","weekday_webtoon_data","partition_webtoon_data","weekday_webtoon_count","length","rest_webtoon_count","partition_count","i","push","slice","assemble_parts","page_index","week_index","customStyles","content","top","height","left","right","bottom","marginRight","transform","Modal","setAppElement","App","subtitle","useState","modalIsOpen","setIsOpen","closeModal","viewing_data","change_viewing_data","set_viewing_data","page_num","change_fully_loading","set_view_page_index","create_view_page_index","make_page_index_array","window","scrollTo","Userid","viewing_webtoons","map","index","convert_data_to_view","save_page","set_save_page","search_txt","change_search_txt","fully_loading","View_more_webtoon","prop","data_length","onClick","move","txt","result","Filter_option","index_array","start_num","view_count","view_page_index","Webtoon_filter","options","Webtoon_area","Page_index_area","type","value","onChange","e","target","input_txt","includes","search_data","paddingLeft","isOpen","onAfterOpen","color","fontFamily","onRequestClose","contentLabel","ref","_subtitle","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.7939097a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport styled from 'styled-components';\r\nimport KaKaoLogin from 'react-kakao-login';\r\n\r\nlet userid;\r\nclass KakaoSignUp extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: 'kakao'\r\n        }\r\n    }\r\n    \r\n    responseKaKao = (res) => {\r\n        this.setState({\r\n            data: res\r\n        })\r\n        userid=this.state.data.profile.id\r\n        this.props.setUserid(userid)      \r\n    }\r\n\r\n    responseFail = (err) => {\r\n    }\r\n\r\n    render() {\r\n        \r\n        return (\r\n            <>\r\n                    <KaKaoLogin\r\n                        onSuccess={this.responseKaKao}\r\n                        getProfile={true}\r\n                    />\r\n            </>\r\n        );\r\n    }\r\n}\r\nexport default KakaoSignUp;","import React from \"react\";\r\nimport type { A_webtoon_info } from \"../modules/base_modules\";\r\n\r\nclass View_a_webtoon extends React.Component<A_webtoon_info> {\r\n  render() {\r\n    let service_and_state: string;\r\n    if (this.props.state != \"\") {\r\n      service_and_state = this.props.service + \" / \" + this.props.state;\r\n    } else {\r\n      service_and_state = this.props.service;\r\n    }\r\n    return (\r\n      <a href={this.props.url}>\r\n        <li className=\"webtoon_container\">\r\n          <div className=\"webtoon_info\">\r\n            <ul className=\"webtoon_info_container\">\r\n              <li\r\n                style={{\r\n                  fontSize: \"10px\",\r\n                  listStyle: \"none\",\r\n                  textAlign: \"right\",\r\n                }}\r\n              >\r\n                {service_and_state}\r\n              </li>\r\n              <li style={{ fontSize: \"10px\", listStyle: \"none\" }}>{this.props.title}</li>\r\n              <li style={{ fontSize: \"8px\", listStyle: \"none\" }}>{this.props.artist}</li>\r\n            </ul>\r\n          </div>\r\n          <div className=\"thumnail\">\r\n            <img src={this.props.img} className=\"thumnail_img\" />\r\n          </div>\r\n        </li>\r\n      </a>\r\n    );\r\n  }\r\n}\r\n\r\nexport default View_a_webtoon;\r\n","import View_a_webtoon from \"./components/webtoon_container\";\nimport KakaoSignUp from \"./components/kakao_login.jsx\";\nimport React, { useState } from \"react\";\nimport type { A_webtoon_info } from \"./modules/base_modules\";\nimport { get_json_data } from \"./modules/base_modules\";\nimport { assemble_parts, search_data } from \"./modules/classify_webtoon\";\nimport Modal from \"react-modal\";\nimport \"./App.css\";\n//View Setting\nconst a_page_webtoon_view_count = 24; //한페이지에 보여줄 웹툰 갯수\nconst a_page_index_view_count = 5; //한페이지에 보여줄 페이지 구분 갯수\nconst webtoon_api_url = \"https://toy-projects-api.herokuapp.com/webtoon/all\";\nconst today_weeknum = new Date().getDay();\nconst webtoon_data: A_webtoon_info[] = get_json_data(webtoon_api_url);\nconst classify_webtoon_data = assemble_parts(webtoon_data, a_page_webtoon_view_count);\nlet page_index = 0;\nlet week_index = today_weeknum;\n\nconst convert_data_to_view = (viewing_data: A_webtoon_info[]) => {\n  const result: JSX.Element[] = viewing_data.map((viewing_data, index: number) => (\n    <View_a_webtoon\n      key={index}\n      title={viewing_data.title}\n      url={viewing_data.url}\n      img={viewing_data.img}\n      artist={viewing_data.artist}\n      service={viewing_data.service}\n      state={viewing_data.state}\n      weekday={viewing_data.weekday}\n    />\n  ));\n  return result;\n};\n\nconst customStyles = {\n  content: {\n    top: \"50%\",\n    height: \"50%\",\n    left: \"50%\",\n    right: \"auto\",\n    bottom: \"auto\",\n    marginRight: \"-50%\",\n    transform: \"translate(-50%, -50%)\",\n  },\n};\nModal.setAppElement(\"#root\");\n\nfunction App() {\n  //modal\n  let subtitle: any;\n  const [modalIsOpen, setIsOpen] = React.useState(false);\n  function openModal() {\n    setIsOpen(true);\n    if (Userid != \"Guest\") {\n      closeModal();\n    }\n  }\n\n  function afterOpenModal() {\n    // references are now sync'd and can be accessed.\n    subtitle.style.color = \"#101820\";\n    subtitle.style.fontFamily = \"main_font\";\n  }\n\n  function closeModal() {\n    setIsOpen(false);\n  }\n\n  //초기 값은 오늘날짜 웹툰\n  const [viewing_data, change_viewing_data] = useState<A_webtoon_info[]>(classify_webtoon_data[week_index][page_index]);\n\n  const set_viewing_data = (week_num: number, page_num: number): void => {\n    change_fully_loading(false);\n    week_index = week_num;\n    page_index = page_num;\n    change_viewing_data(classify_webtoon_data[week_index][page_index]);\n    set_view_page_index(create_view_page_index(make_page_index_array(classify_webtoon_data[week_index]), page_index, a_page_index_view_count));\n    window.scrollTo(0, 0);\n  };\n\n  const [Userid, setUserid] = useState(\"Guest\");\n  const viewing_webtoons = convert_data_to_view(viewing_data);\n\n  //검색전 보던 페이지 저장\n  const [save_page, set_save_page] = useState<A_webtoon_info[]>(viewing_data);\n\n  //검색 기능\n  const [search_txt, change_search_txt] = useState(\"\");\n  const [fully_loading, change_fully_loading] = useState(false);\n  const set_search_txt = (e: any) => {\n    change_search_txt(e.target.value);\n    if (e.target.value == \"\") {\n      change_fully_loading(false);\n      change_viewing_data(save_page);\n    } else {\n      change_fully_loading(true);\n      change_viewing_data(search_data(e.target.value, webtoon_data));\n    }\n  };\n\n  //하단 페이지 : 한번에 크게 이동\n  const View_more_webtoon = (prop: any) => {\n    let data_length: number = classify_webtoon_data[week_index].length;\n    return (\n      <li>\n        <a\n          className=\"view_select_item\"\n          onClick={() => {\n            switch (prop.move) {\n              case \">\":\n                if (page_index + a_page_index_view_count < data_length) {\n                  set_viewing_data(week_index, page_index + a_page_index_view_count);\n                }\n                break;\n              case \"<\":\n                if (page_index > a_page_index_view_count) {\n                  set_viewing_data(week_index, page_index - a_page_index_view_count);\n                } else if (page_index != 0) {\n                  page_index = 0;\n                  set_viewing_data(week_index, page_index);\n                }\n                break;\n            }\n          }}\n        >\n          {prop.txt}\n        </a>\n      </li>\n    );\n  };\n\n  const make_page_index_array = (viewing_data: A_webtoon_info[][]) => {\n    let result: number[] = [];\n    const data_length: number = viewing_data.length;\n    for (let i = 1; i <= data_length; i++) {\n      result.push(i);\n    }\n    return result;\n  };\n\n  const Filter_option = (prop: any) => {\n    return (\n      <li className=\"filter_option\">\n        <a\n          id={prop.id}\n          onClick={() => {\n            set_viewing_data(prop.week_num, prop.page_num);\n          }}\n        >\n          {prop.txt}\n        </a>\n      </li>\n    );\n  };\n\n  const create_view_page_index = (index_array: number[], start_num: number, view_count: number) => {\n    const result: JSX.Element[] = index_array\n      .map((data) => <Filter_option week_num={week_index} page_num={data - 1} txt={data} />)\n      .slice(start_num, start_num + view_count);\n    return result;\n  };\n\n  const [view_page_index, set_view_page_index] = useState(\n    create_view_page_index(make_page_index_array(classify_webtoon_data[week_index]), 0, a_page_index_view_count),\n  );\n\n  const Webtoon_filter = () => {\n    let options: JSX.Element[] = [];\n    const index: string[] = [\"일\", \"월\", \"화\", \"수\", \"목\", \"금\", \"토\", \"완결\"];\n    for (let i = 0; i < 8; i++) {\n      options[i] = <Filter_option week_num={i} page_num={0} txt={index[i]} />;\n    }\n    return <ul className=\"filter_container\">{options}</ul>;\n  };\n\n  const Webtoon_area = () => {\n    if (fully_loading) {\n    }\n    return <ul className=\"content_area\">{viewing_webtoons}</ul>;\n  };\n  const Page_index_area = () => {\n    if (fully_loading) {\n      return <></>;\n    } else {\n      return (\n        <>\n          <View_more_webtoon move=\"<\" txt=\"<\" />\n          {view_page_index}\n          <View_more_webtoon move=\">\" txt=\">\" />\n        </>\n      );\n    }\n  };\n\n  return (\n    <div className=\"body\">\n      <div className=\"top_bar\">\n        <input\n          type={\"text\"}\n          value={search_txt}\n          className=\"top_bar_search_box\"\n          onClick={() => {\n            set_save_page(viewing_data);\n          }}\n          onChange={set_search_txt}\n        />\n        <span className=\"top_bar_item\">\n          /SEARCH\n          <li style={{ paddingLeft: \"20px\" }} onClick={openModal}>\n            Login\n          </li>\n          <Modal isOpen={modalIsOpen} onAfterOpen={afterOpenModal} onRequestClose={closeModal} style={customStyles} contentLabel=\"Example Modal\">\n            {Userid}\n            <h2 ref={(_subtitle) => (subtitle = _subtitle)}>WEBTOONHUB</h2>\n            <KakaoSignUp setUserid={setUserid} />\n          </Modal>\n        </span>\n      </div>\n      <Webtoon_filter />\n      <Webtoon_area />\n      <span className=\"view_select\">\n        <Page_index_area />\n      </span>\n    </div>\n  );\n}\n\nexport default App;\n","interface A_webtoon_info {\r\n  title: string;\r\n  artist: string;\r\n  url: string;\r\n  img: string;\r\n  service: string;\r\n  state: string;\r\n  weekday: number;\r\n}\r\n\r\nconst get_json_data = (url: string) => {\r\n  let xmlhttp = new XMLHttpRequest();\r\n  let json_data: any;\r\n  xmlhttp.onreadystatechange = () => {\r\n    if (xmlhttp.readyState == 4 && xmlhttp.status == 200) {\r\n      try {\r\n        json_data = JSON.parse(xmlhttp.responseText);\r\n      } catch (err) {\r\n        console.log(err.message + \" in \" + xmlhttp.responseText);\r\n        return;\r\n      }\r\n    }\r\n  };\r\n  xmlhttp.open(\"GET\", url, false); //true는 비동기식, false는 동기식 true로 할시 변수 변경전에 웹페이지가 떠버림\r\n  xmlhttp.send();\r\n  return json_data;\r\n};\r\n\r\nexport type { A_webtoon_info };\r\nexport { get_json_data };\r\n","import type { A_webtoon_info } from \"./base_modules\";\r\n\r\nconst assemble_parts = (webtoon_data: A_webtoon_info[], view_webtoon_count: number) => {\r\n  //요일별로 분류\r\n  const weekday_webtoon = (week_num: number): A_webtoon_info[] => {\r\n    let weekday_webtoon_data = webtoon_data.filter(function (element: A_webtoon_info) {\r\n      return element.weekday == week_num;\r\n    });\r\n    return weekday_webtoon_data;\r\n  };\r\n  //한페이지에 보여줄 갯수로 묶음\r\n  const partition_webtoon = (weekday_webtoon_data: A_webtoon_info[], view_webtoon_count: number) => {\r\n    let partition_webtoon_data: A_webtoon_info[][] = [];\r\n    const weekday_webtoon_count: number = weekday_webtoon_data.length;\r\n    const rest_webtoon_count: number = weekday_webtoon_count % view_webtoon_count;\r\n    if (rest_webtoon_count == 0) {\r\n      const partition_count = weekday_webtoon_count / view_webtoon_count;\r\n      for (let i = 0; i < partition_count; i++) {\r\n        partition_webtoon_data.push(weekday_webtoon_data.slice(i * view_webtoon_count, i * view_webtoon_count + view_webtoon_count));\r\n      }\r\n    } else {\r\n      const partition_count = (weekday_webtoon_count - rest_webtoon_count) / view_webtoon_count;\r\n      for (let i = 0; i < partition_count; i++) {\r\n        partition_webtoon_data.push(weekday_webtoon_data.slice(i * view_webtoon_count, i * view_webtoon_count + view_webtoon_count));\r\n      }\r\n      partition_webtoon_data.push(weekday_webtoon_data.slice(weekday_webtoon_count - rest_webtoon_count - 1, weekday_webtoon_count - 1));\r\n    }\r\n    return partition_webtoon_data;\r\n  };\r\n\r\n  //분류했던 데이터 재조립\r\n  let classify_webtoon_data: A_webtoon_info[][][] = [];\r\n  for (let i = 0; i < 8; i++) {\r\n    classify_webtoon_data.push(partition_webtoon(weekday_webtoon(i), view_webtoon_count));\r\n  }\r\n  return classify_webtoon_data;\r\n};\r\n\r\nfunction search_data(input_txt: string, webtoon_data: A_webtoon_info[]) {\r\n  const change_target_data = webtoon_data.filter(function (element: A_webtoon_info) {\r\n    return element.title.includes(input_txt) || element.artist.includes(input_txt);\r\n  });\r\n  return change_target_data;\r\n}\r\n\r\nexport { assemble_parts, search_data };\r\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\"),\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}